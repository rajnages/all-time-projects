name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
    # Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v2

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "1.3.0"

    # Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Terraform Initialization with custom module path
    - name: Terraform Init
      run: terraform init -chdir=all-time-projects/modules/

    # Terraform Workspace (Select workspace for dev or prod)
    - name: Terraform Workspace
      run: terraform workspace select ${{ github.event.workspace }} -chdir=./modules/

    # Set up .tfvars file based on workspace
    - name: Set up variables file
      run: |
        if [[ "${{ github.event.workspace }}" == "dev" ]]; then
          export TF_VARS_FILE="dev.tfvars"
        elif [[ "${{ github.event.workspace }}" == "prod" ]]; then
          export TF_VARS_FILE="prod.tfvars"
        fi
        echo "Using variables file: $TF_VARS_FILE"
    # Terraform Plan (Dry run to see changes) with the corresponding .tfvars
    - name: Terraform Plan
      run: terraform plan -var-file=${{ env.TF_VARS_FILE }} -chdir=./modules/

    # Terraform Apply (Automatic apply if plan is successful)
    - name: Terraform Apply
      run: terraform apply -auto-approve -var-file=${{ env.TF_VARS_FILE }} -chdir=all-time-projects/modules/
